(function(){angular.module("flashular",[]).factory("flash",["$rootScope",function($rootScope){var Flash,eventName,flash,isModuleLoaded;return Flash=function(){function Flash(){this.data={}}return Flash.prototype.set=function(k,v){return this.data[k]=v},Flash.prototype.get=function(k){return this.data[k]},Flash.prototype.has=function(k){return k in this.data},Flash.prototype.remove=function(k){return delete this.data[k]},Flash.prototype.clear=function(){var k,_results;_results=[];for(k in this.data)_results.push(this.remove(k));return _results},Flash.prototype.isEmpty=function(){return this.data.length<=0},Flash}(),isModuleLoaded=function(name){var e;try{return null!=angular.module(name)}catch(_error){return e=_error,!1}},eventName=isModuleLoaded("ngRoute")?"$routeChangeSuccess":isModuleLoaded("ui.router")?"$stateChangeSuccess":"$locationChangeSuccess",flash=new Flash,flash.now=new Flash,$rootScope.$on(eventName,function(event,args){return null==args.redirectTo?(flash.now.clear(),angular.extend(flash.now.data,flash.data),flash.clear()):void 0}),flash}]).directive("flashAlerts",["flash","$interpolate",function(flash,$interpolate){return{restrict:"E",replace:!0,scope:{closeable:"&",preProcess:"&"},template:'<div ng-show="flash" class="alerts">\n  <div ng-repeat="alertType in alertTypes" ng-show="flash.has(alertType)" class="alert alert-{{alertClass(alertType)}}">\n    <button ng-if="closeable" type="button" class="close" ng-click="flash.remove(alertType)">&times;</button>\n    {{flash.has(alertType) ? preProcess({alert: flash.get(alertType)}) : ""}}\n  </div>\n</div>',link:function(scope,iElement,iAttrs){var alertClassMap,_ref,_ref1;return scope.flash=flash.now,scope.alertTypes=["info","success","error","warning","danger"],scope.closeable=null!=(_ref=iAttrs.closeable)?_ref:!1,scope.preProcess=null!=(_ref1=iAttrs.preProcess)?_ref1:function(alert){return $interpolate("{{alert}}")(alert)},alertClassMap={alert:"danger",error:"danger"},scope.alertClass=function(alertType){return alertClassMap[alertType]||alertType}}}}])}).call(this);